{"version":3,"sources":["components/Coin.js","App.js","index.js"],"names":["Coin","name","price","marketcap","image","priceChange_1h","priceChange_24h","priceChange_7d","ath","chart","src","className","toFixed","replace","toLocaleString","data","color","App","useState","coins","setCoins","CryptoData","axios","get","then","response","catch","errors","console","log","useEffect","interval","setInterval","updateTime","Date","toLocaleTimeString","clearInterval","format","withTitle","map","coin","current_price","market_cap","price_change_percentage_1h_in_currency","price_change_percentage_24h","price_change_percentage_7d_in_currency","sparkline_in_7d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.137ac86e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nconst Coin = ({\r\n  name,\r\n  price,\r\n  marketcap,\r\n  image,\r\n  priceChange_1h,\r\n  priceChange_24h,\r\n  priceChange_7d,\r\n  ath,\r\n  chart\r\n}) => {\r\n  return (\r\n            <tr>\r\n              <td ><img src={image} className='coin-img'/></td>\r\n              <td><h3>{name}</h3></td>\r\n              <td>\r\n                        {price > ath ? (\r\n                            <p className='ATHincoming'>${price.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</p>\r\n                        ) : (   \r\n                            <p>${price.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</p>\r\n                        )}\r\n              </td>\r\n              <td>\r\n                      {priceChange_1h < 0 && priceChange_1h > -10 ? (\r\n                            <p className='red'>{priceChange_1h.toFixed(2)}%</p> \r\n                        ) : priceChange_1h < -10  ? (\r\n                            <p className='redBold'>{priceChange_1h.toFixed(2)}%</p>   \r\n                        ) : priceChange_1h < 10 && priceChange_1h > 0 ? (\r\n                            <p className='green'>{priceChange_1h.toFixed(2)}%</p>\r\n                        ) : priceChange_1h > 10 (\r\n                            <p className='greenBold'>{priceChange_1h.toFixed(2)}%</p>\r\n                        )}\r\n              </td>\r\n              <td>\r\n                      {priceChange_24h < 0 && priceChange_24h > -10 ? (\r\n                            <p className='red'>{priceChange_24h.toFixed(2)}%</p> \r\n                        ) : priceChange_24h < -10  ? (\r\n                            <p className='redBold'>{priceChange_24h.toFixed(2)}%</p>   \r\n                        ) : priceChange_24h < 10 && priceChange_24h > 0 ? (\r\n                            <p className='green'>{priceChange_24h.toFixed(2)}%</p>\r\n                        ) : (\r\n                            <p className='greenBold'>{priceChange_24h.toFixed(2)}%</p>\r\n                        )}\r\n              </td>\r\n              <td>\r\n                      {priceChange_7d < 0 && priceChange_7d > -10 ? (\r\n                            <p className='red'>{priceChange_7d.toFixed(2)}%</p> \r\n                        ) : priceChange_7d < -10  ? (\r\n                            <p className='redBold'>{priceChange_7d.toFixed(2)}%</p>   \r\n                        ) : priceChange_7d < 10 && priceChange_7d > 0 ? (\r\n                            <p className='green'>{priceChange_7d.toFixed(2)}%</p>\r\n                        ) : (\r\n                            <p className='greenBold'>{priceChange_7d.toFixed(2)}%</p>\r\n                        )}                  \r\n              </td>\r\n              <td>${ath.toLocaleString()}</td>    \r\n              <td>${marketcap.toLocaleString()}</td>\r\n              <td className='sparklineGraph'>\r\n                        <Sparklines data={chart}>\r\n                            <SparklinesLine color=\"#66fcf1\" />\r\n                        </Sparklines>\r\n              </td>\r\n            </tr>\r\n  );\r\n};\r\n\r\nexport default Coin;","import React, { useState, useEffect, useContext } from \"react\";\nimport \"./App.css\";\nimport Clock from \"react-digital-clock\";\nimport Coin from \"./components/Coin\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\n\nfunction App() {\n    const [coins, setCoins] = useState([]);\n\n    const CryptoData = () => {\n        axios\n            .get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin%2C%20ethereum%2C%20iota%2C%20litecoin%2C%20cardano&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=1h%2C24h%2C7d\")\n            .then((response) => {\n                setCoins(response.data);\n            })\n            .catch((errors) => console.log(errors));\n    };\n\n    /* Pulls crypto data on load and updates every 10 seconds */\n    useEffect(() => {\n        CryptoData();\n        const interval = setInterval(() => {\n            CryptoData();\n            const updateTime = new Date();\n            console.log(\"Crypto data updated at: \" + updateTime.toLocaleTimeString());\n        }, 10000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"date\">\n                <Moment format=\"MMMM D, YYYY\" withTitle />\n            </div>\n            <div className=\"clock\">\n                <Clock format={\"hh-mm\"} />\n            </div>\n            <table>\n                <tr>\n                    <th></th>\n                    <th>Coin</th>\n                    <th>Current Price</th>\n                    <th>1h</th>\n                    <th>24h</th>\n                    <th>7d</th>\n                    <th>ATH</th>\n                    <th>Market Cap</th>\n                    <th>7d Chart</th>\n                </tr>\n                {coins.map((coin) => {\n                    return (\n                        <Coin\n                            name={coin.name}\n                            price={coin.current_price}\n                            marketcap={coin.market_cap}\n                            image={coin.image}\n                            priceChange_1h={coin.price_change_percentage_1h_in_currency}\n                            priceChange_24h={coin.price_change_percentage_24h}\n                            priceChange_7d={coin.price_change_percentage_7d_in_currency}\n                            ath={coin.ath}\n                            chart={coin.sparkline_in_7d.price}\n                        />\n                    );\n                })}\n            </table>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}